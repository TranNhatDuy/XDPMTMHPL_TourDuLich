package GUI;

import BLL.DiaDiemBLL;
import BLL.GiaBLL;
import DAL.KhachHangDAL;
import DAL.MySQLConnect;
import DTO.DiaDiemDTO;
import DTO.GiaDTO;
import DTO.KhachHangDTO;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import com.toedter.calendar.*;
/**
 *
 * @author Win 10
 */
public class Panel_Gia extends javax.swing.JPanel {

    private DefaultTableModel modelgia;
    private List<GiaDTO> gia;

    private DefaultTableModel modeldiadiem;
    private List<DiaDiemDTO> diadiem;

    public Panel_Gia() {

        initComponents();
//        this.setSize(672,496);

        this.setBounds(0, 0, 786, 632);
        this.setBorder(BorderFactory.createLineBorder(Color.black));
        modelgia = (DefaultTableModel) tblGia.getModel();
        gia = new ArrayList<>();

        modeldiadiem = (DefaultTableModel) tblDiaDiem.getModel();
        diadiem = new ArrayList<>();

        TimKiemGia();
        ShowGia();
        ShowDiaDiem();
        BlockText();
    }

    /**
     * Creates new form Panel_CN1
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblDiaDiem = new javax.swing.JTable();
        txtMaDiaDiem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtThanhPho = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jbtThem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jbtXoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jbtSua = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTimGia = new javax.swing.JTextField();
        txtMaGia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGia = new javax.swing.JTable();
        txtGia = new javax.swing.JTextField();
        jdcTuNgay = new com.toedter.calendar.JDateChooser();
        jdcDenNgay = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(786, 629));

        tblDiaDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Địa Điểm", "Thành Phố"
            }
        ));
        tblDiaDiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiaDiemMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDiaDiem);

        jLabel3.setText("Giá:");

        jLabel4.setText("Từ Ngày:");

        jbtThem.setText("Thêm");
        jbtThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtThemActionPerformed(evt);
            }
        });

        jLabel5.setText("Mã Địa Điểm:");

        jbtXoa.setText("Xoá");
        jbtXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtXoaActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã Giá:");

        jbtSua.setText("Sửa");
        jbtSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSuaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("GIÁ");

        jLabel7.setText("Đến Ngày:");

        jButton4.setText("Làm Mới");

        jLabel2.setText("Tìm kiếm:");

        jLabel8.setText("Thành Phố:");

        tblGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Giá", "Mã Địa Điểm", "Giá", "Từ Ngày", "Đến Ngày"
            }
        ));
        tblGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimGia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMaDiaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(252, 252, 252)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaGia, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(txtGia)
                                    .addComponent(jdcTuNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jdcDenNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jbtThem)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtThanhPho, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(74, 74, 74)
                                .addComponent(jbtXoa)
                                .addGap(78, 78, 78)
                                .addComponent(jbtSua)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTimGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtMaGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jdcTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel7)
                        .addComponent(txtMaDiaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jdcDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtThanhPho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtThem)
                    .addComponent(jbtXoa)
                    .addComponent(jbtSua))
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
void BlockText() {
        txtMaDiaDiem.setEditable(false);
        txtThanhPho.setEditable(false);
    }

    void ShowDiaDiem() {
        diadiem = new DiaDiemBLL().loadDataDiaDiem();
        modeldiadiem.setRowCount(0);
        for (DiaDiemDTO d : diadiem) {
            modeldiadiem.addRow(new Object[]{
                d.getMadd(), d.getThanhpho()
            });
        }
    }

    void ShowGia() {
        gia = new GiaBLL().loadDataGia();
        modelgia.setRowCount(0);
        for (GiaDTO g : gia) {
            modelgia.addRow(new Object[]{
                g.getMagia(), g.getDiadiem().getMadd(), g.getSotien(), g.getTungay(), g.getDenngay()
            });
        }
    }

    void TimKiemGia() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblGia.getModel());
        tblGia.setRowSorter(rowSorter);
        txtTimGia.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = txtTimGia.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = txtTimGia.getText();
                if (text.length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    void Reset() {
        txtMaGia.setText("");
        txtMaDiaDiem.setText("");
        txtGia.setText("");
//        jdcTuNgay.setDate();
//        txtDenNgay.setText("");
        txtTimGia.setText("");
    }

    private void tblDiaDiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiaDiemMouseClicked
        int index_diadiem = tblDiaDiem.getSelectedRow();
        if (index_diadiem == -1) {
            JOptionPane.showMessageDialog(this, "Chọn dòng trong bảng để hiển thị");
        } else {
            txtMaDiaDiem.setText(modeldiadiem.getValueAt(index_diadiem, 0).toString().trim());
            txtThanhPho.setText(modeldiadiem.getValueAt(index_diadiem, 1).toString().trim());
        }
    }//GEN-LAST:event_tblDiaDiemMouseClicked

    private void jbtThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtThemActionPerformed
        int index_diadiem = tblDiaDiem.getSelectedRow();

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        String magia = txtMaGia.getText();
        int sotien = Integer.parseInt(txtGia.getText());
        String tungay = sdf.format(jdcTuNgay.getDate());
        String denngay = sdf.format(jdcDenNgay.getDate());
        Boolean isOK = true;

        if (magia.length() == 0) {
            JOptionPane.showMessageDialog(this, "Mã giá không được để trống");
            isOK = false;
        }
//        } else if (tungay.length() == 0) {
//            JOptionPane.showMessageDialog(this, "Từ ngày không được để trống");
//            isOK = false;
//        } else if (denngay.length() == 0) {
//            JOptionPane.showMessageDialog(this, "Đến ngày không được để trống");
//            isOK = false;
//        }

        if (magia.length() > 0) {
            for (GiaDTO g : gia) {
                if (g.getMagia().matches(magia)) {
                    JOptionPane.showMessageDialog(this, "Mã giá không được trùng");
                    isOK = false;
                    txtMaGia.setText("");
                }
            }
        }

        if (isOK) {

            DiaDiemDTO dd = diadiem.get(index_diadiem);
            GiaDTO g = new GiaDTO(magia, dd, sotien, tungay, denngay);
            new GiaBLL().addGia(g);
            JOptionPane.showMessageDialog(this, "Thêm thành công giá");
            Reset();
            ShowGia();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm không thành công");
        }
    }//GEN-LAST:event_jbtThemActionPerformed

    private void jbtXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtXoaActionPerformed
        int indexGia = tblGia.getSelectedRow();
        String data = modelgia.getValueAt(indexGia, 0).toString();
        if (indexGia >= 0) {
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xoá không") == 0) {
                GiaDTO g = new GiaDTO();
                new GiaBLL().removeGia(g, data);
                JOptionPane.showMessageDialog(this, "Xoá thành công");
                Reset();
                ShowGia();
            } else {
                JOptionPane.showMessageDialog(this, "Xoá không thành công");
            }
        }
    }//GEN-LAST:event_jbtXoaActionPerformed

    private void jbtSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSuaActionPerformed
        int indexGia = tblGia.getSelectedRow();
        String data = modelgia.getValueAt(indexGia, 0).toString();

        if (indexGia >= 0) {
            GiaDTO g = new GiaDTO();
            g.setSotien(Integer.parseInt(txtGia.getText()));
            g.setTungay(jdcTuNgay.getDateFormatString());
            g.setDenngay(jdcDenNgay.getDateFormatString());
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa không") == 0) {
                new GiaBLL().editGia(g, data);
                JOptionPane.showMessageDialog(this, "Sửa thành công");
                Reset();
                ShowGia();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa không thành công");
            }
        }
    }//GEN-LAST:event_jbtSuaActionPerformed

    private void tblGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGiaMouseClicked
        int index = tblGia.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Chọn dòng trong bảng để hiển thị");
        } else {
            txtMaGia.setText(modelgia.getValueAt(index, 0).toString().trim());
            txtMaDiaDiem.setText(modelgia.getValueAt(index, 1).toString().trim());
            txtGia.setText(modelgia.getValueAt(index, 2).toString().trim());
            try {
                jdcTuNgay.setDate(new SimpleDateFormat("yyyy-MM-dd").parse((String)modelgia.getValueAt(index, 3)));
                jdcDenNgay.setDate(new SimpleDateFormat("yyyy-MM-dd").parse((String)modelgia.getValueAt(index, 4)));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tblGiaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtSua;
    private javax.swing.JButton jbtThem;
    private javax.swing.JButton jbtXoa;
    private com.toedter.calendar.JDateChooser jdcDenNgay;
    private com.toedter.calendar.JDateChooser jdcTuNgay;
    private javax.swing.JTable tblDiaDiem;
    private javax.swing.JTable tblGia;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaDiaDiem;
    private javax.swing.JTextField txtMaGia;
    private javax.swing.JTextField txtThanhPho;
    private javax.swing.JTextField txtTimGia;
    // End of variables declaration//GEN-END:variables
}
