/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.DoanBLL;
import BLL.NhanVienBLL;
import DAL.NhanVienDAL;
import DTO.DoanDTO;
import DTO.NhanVienDTO;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class Panel_NhanVien extends javax.swing.JPanel {

    /**
     * Creates new form Panel_NhanVien
     */
    private List<NhanVienDTO> nvList;
    private List<DoanDTO> doanList;
    DefaultTableModel dtmNV, dtmDoan;

    public Panel_NhanVien() {
        initComponents();
        this.setBounds(0, 0, 786, 632);
        this.setBorder(BorderFactory.createLineBorder(Color.black));
        nvList = new ArrayList<>();
        dtmNV = (DefaultTableModel) tblNV.getModel();
        dtmDoan = (DefaultTableModel) tblDoan.getModel();
        showNhanVien();
        showDoan();
        TimKiem();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDiaChi = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtManv = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        txtTennv = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNV = new javax.swing.JTable();
        txtSdt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtTimkiem = new javax.swing.JTextField();
        lblMaKH = new javax.swing.JLabel();
        lblTenKH = new javax.swing.JLabel();
        lblSdt = new javax.swing.JLabel();
        lblDiaChi1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblMaKH1 = new javax.swing.JLabel();
        cbNhiemvu = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoan = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtMadoan = new javax.swing.JTextField();
        jdcNgaySinh = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(786, 629));

        lblDiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDiaChi.setText("Ngày sinh:");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        txtManv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtManv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtManvMouseClicked(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        txtTennv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTennvMouseClicked(evt);
            }
        });

        tblNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Mã đoàn", "Tên nhân viên", "Số điện thoại", "Ngày sinh", "Email", "Nhiệm vụ"
            }
        ));
        tblNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNV);
        if (tblNV.getColumnModel().getColumnCount() > 0) {
            tblNV.getColumnModel().getColumn(3).setResizable(false);
        }

        txtSdt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSdtMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Nhân Viên");

        lblMaKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMaKH.setText("Mã nhân viên:");

        lblTenKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTenKH.setText("Tên nhân viên:");

        lblSdt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSdt.setText("SĐT:");

        lblDiaChi1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDiaChi1.setText("Nhiệm vụ:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tìm Kiếm:");

        lblMaKH1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMaKH1.setText("Mã đoàn:");

        cbNhiemvu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbNhiemvu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hướng dẫn viên", "Tài xế", "Lơ xe", " " }));

        tblDoan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã đoàn", "Mã tour", "Tên đoàn", "Ngày đi", "Ngày về", "Chi tiết"
            }
        ));
        tblDoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDoan);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Email:");

        txtEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmailMouseClicked(evt);
            }
        });

        txtMadoan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMadoan.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMadoan.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaKH)
                            .addComponent(lblTenKH)
                            .addComponent(lblSdt)
                            .addComponent(lblDiaChi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtManv, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(txtTennv, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(jdcNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSdt, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDiaChi1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbNhiemvu, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(lblMaKH1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMadoan, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 550, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(296, 296, 296)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimkiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaKH))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenKH)
                            .addComponent(txtTennv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSdt)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaKH1)
                            .addComponent(txtMadoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDiaChi)
                        .addComponent(lblDiaChi1)
                        .addComponent(cbNhiemvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jdcNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    void TimKiem() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblNV.getModel());
        tblNV.setRowSorter(rowSorter);
        txtTimkiem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = txtTimkiem.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = txtTimkiem.getText();
                if (text.length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    void reset() {
        txtManv.setText("");
        txtMadoan.setText("");
        txtMadoan.setEditable(false);
        txtTennv.setText("");
        txtSdt.setText("");
        jdcNgaySinh.setCalendar(null);
        txtEmail.setText("");
        cbNhiemvu.setSelectedItem("Hướng dẫn viên");
        tblDoan.setRowSelectionAllowed(false);
        tblNV.setRowSelectionAllowed(false);
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        boolean isOK=true;
        NhanVienDTO nv = new NhanVienDTO();
        nv.setManv(txtManv.getText());
        nv.setMadoan(txtMadoan.getText());
        nv.setTennv(txtTennv.getText());
        nv.setSdt(txtSdt.getText());
        nv.setNgaysinh(new SimpleDateFormat("yyyy-MM-dd").format(jdcNgaySinh.getDate()));
        nv.setEmail(txtEmail.getText());
        nv.setNhiemvu(cbNhiemvu.getSelectedItem().toString());
        
        if(txtManv.getText().length()>0){
            for (NhanVienDTO n : nvList) {
                if(n.getManv().matches(txtManv.getText())){
                    JOptionPane.showMessageDialog(this, "Mã nhân viên không được trùng");
                    isOK=false;
                }
            }
        }
        
        NhanVienBLL.addNhanVien(nv);
        JOptionPane.showMessageDialog(this, "Thêm thành công");
        reset();
        showNhanVien();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        reset();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tblNV.getSelectedRow();
        if (selectedIndex >= 0) {
            NhanVienDTO t = nvList.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa?");
            if (option == 0) {
                NhanVienBLL.removeNhanVien(t.getManv());
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                showNhanVien();
            }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtManvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtManvMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_txtManvMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        String manv = txtManv.getText();
        String madoan = txtMadoan.getText();
        String tennv = txtTennv.getText();
        String sdt = txtSdt.getText();
        String ngaysinh = new SimpleDateFormat("yyyy-MM-dd").format(jdcNgaySinh.getDate());
        String email = txtEmail.getText();
        String nhiemvu = cbNhiemvu.getSelectedItem().toString();

        NhanVienDTO nv = new NhanVienDTO(manv, madoan, tennv, sdt, ngaysinh, email, nhiemvu);
        NhanVienBLL.editNhanVien(nv, manv);
        JOptionPane.showMessageDialog(null, "Sửa thành công");
        reset();
        showNhanVien();

    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtTennvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTennvMouseClicked

    }//GEN-LAST:event_txtTennvMouseClicked

    private void tblNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNVMouseClicked
        // TODO add your handling code here:
        int selectedIndex = tblNV.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(btnLamMoi, "Vui lòng chọn dòng trong bảng để hiển thị!");
        } else {
            txtManv.setText(dtmNV.getValueAt(selectedIndex, 0).toString().trim());
            txtTennv.setText(dtmNV.getValueAt(selectedIndex, 2).toString().trim());
            txtSdt.setText(dtmNV.getValueAt(selectedIndex, 3).toString().trim());
            try {
                jdcNgaySinh.setDate(new SimpleDateFormat("yyyy-MM-dd").parse((String) dtmNV.getValueAt(selectedIndex, 4)));
            } catch (Exception e) {
                e.printStackTrace();
            }
            txtEmail.setText(dtmNV.getValueAt(selectedIndex, 5).toString().trim());
            cbNhiemvu.setSelectedItem(dtmNV.getValueAt(selectedIndex, 6).toString().trim());
            txtMadoan.setText(dtmNV.getValueAt(selectedIndex, 1).toString().trim());
        }


    }//GEN-LAST:event_tblNVMouseClicked

    private void txtSdtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSdtMouseClicked

    }//GEN-LAST:event_txtSdtMouseClicked

    private void txtEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailMouseClicked

    private void tblDoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoanMouseClicked
        // TODO add your handling code here:
        int selectedIndex = tblDoan.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(btnLamMoi, "Vui lòng chọn dòng trong bảng để hiển thị");
        } else {
            txtMadoan.setText(dtmDoan.getValueAt(selectedIndex, 0).toString().trim());
        }

    }//GEN-LAST:event_tblDoanMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbNhiemvu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcNgaySinh;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblDiaChi1;
    private javax.swing.JLabel lblMaKH;
    private javax.swing.JLabel lblMaKH1;
    private javax.swing.JLabel lblSdt;
    private javax.swing.JLabel lblTenKH;
    private javax.swing.JTable tblDoan;
    private javax.swing.JTable tblNV;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMadoan;
    private javax.swing.JTextField txtManv;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTennv;
    private javax.swing.JTextField txtTimkiem;
    // End of variables declaration//GEN-END:variables

    private void showNhanVien() {
        nvList = NhanVienBLL.loadDataNhanVien();
        dtmNV.setRowCount(0);
        for (NhanVienDTO NV : nvList) {
            dtmNV.addRow(new Object[]{
                NV.getManv(), NV.getMadoan(), NV.getTennv(), NV.getSdt(), NV.getNgaysinh(), NV.getEmail(), NV.getNhiemvu()
            });
        }
    }

    public void showDoan() {
        doanList = DoanBLL.loadDataDoan();
        dtmDoan.setRowCount(0);
        for (DoanDTO d : doanList) {
            dtmDoan.addRow(new Object[]{
                d.getMadoan(), d.getMatour(), d.getTendoan(), d.getNgaydi(), d.getNgayve(), d.getChitietchuongtrinh()
            });
        }
    }
}
