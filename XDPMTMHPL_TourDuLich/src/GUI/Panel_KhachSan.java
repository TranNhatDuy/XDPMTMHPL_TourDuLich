/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.KhachSanBLL;
import DTO.KhachSanDTO;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Win 10
 */
public class Panel_KhachSan extends javax.swing.JPanel {

    /**
     * Creates new form Panel_CN2
     */
    private List<KhachSanDTO> khachsan;
    private DefaultTableModel modelks;

    public Panel_KhachSan() {
        initComponents();
        this.setSize(672, 496);
        this.setBorder(BorderFactory.createLineBorder(Color.black));

        khachsan = new ArrayList<>();
        modelks = (DefaultTableModel) tblKhachSan.getModel();;

        ShowKhachSan();
        TimKiem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhachSan = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtMaKS = new javax.swing.JTextField();
        txtTenKS = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtTimkiem = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(550, 480));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("KHÁCH SẠN");

        tblKhachSan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KS", "Tên KS", "Giá"
            }
        ));
        tblKhachSan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachSanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhachSan);

        jLabel2.setText("Mã khách sạn:");

        jLabel3.setText("Tên khách sạn:");

        jLabel4.setText("Giá:");

        txtGia.setForeground(new java.awt.Color(153, 153, 153));
        txtGia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiaMouseClicked(evt);
            }
        });

        txtMaKS.setForeground(new java.awt.Color(153, 153, 153));
        txtMaKS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtMaKS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMaKSMouseClicked(evt);
            }
        });

        txtTenKS.setForeground(new java.awt.Color(153, 153, 153));
        txtTenKS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtTenKS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTenKSMouseClicked(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm kiếm:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenKS)
                            .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(txtMaKS))
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ShowKhachSan() {
        khachsan = new KhachSanBLL().loadDataKhachSan();
        modelks.setRowCount(0);
        for (KhachSanDTO ks : khachsan) {
            modelks.addRow(new Object[]{
                ks.getMaks(), ks.getTenks(), ks.getGia()
            });
        }
    }

    private void ResetText() {
        txtMaKS.setText("");
        txtTenKS.setText("");
        txtGia.setText("");
    }

    private void TimKiem() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblKhachSan.getModel());
        tblKhachSan.setRowSorter(rowSorter);
        txtTimkiem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = txtTimkiem.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = txtTimkiem.getText();
                if (text.length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });

    }
    private void txtGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiaMouseClicked
        // TODO add your handling code here:
        if (evt.getSource() == txtGia) {
            txtGia.setText("");
        }
    }//GEN-LAST:event_txtGiaMouseClicked

    private void txtMaKSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMaKSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKSMouseClicked

    private void txtTenKSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTenKSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKSMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String maks = txtMaKS.getText();
        String tenks = txtTenKS.getText();
        Float gia = Float.parseFloat(txtGia.getText());
        Boolean isOK = true;

        if (maks.length() == 0) {
            JOptionPane.showMessageDialog(this, "Mã Khách Sạn không được để trống !!!");
            isOK = false;
        } else if (tenks.length() == 0) {
            JOptionPane.showMessageDialog(this, "Tên Khách Sạn không được để trống !!!");
            isOK = false;
        } else if (gia == 0) {
            JOptionPane.showMessageDialog(this, "Giá Khách Sạn không được để trống !!!");
            isOK = false;
        }
        if (maks.length() > 0) {
            for (KhachSanDTO ks : khachsan) {
                if (ks.getMaks().matches(maks)) {
                    JOptionPane.showMessageDialog(this, "Mã Khách Sạn không được trùng !!!");
                    isOK = false;
                }
            }
        }

        if (isOK) {
            KhachSanDTO ks = new KhachSanDTO();
            ks.setMaks(maks);
            ks.setTenks(tenks);
            ks.setGia(gia);
            if (new KhachSanBLL().addKhachSan(ks)) {
                JOptionPane.showMessageDialog(this, "Thêm thành công khách sạn");
                khachsan.add(ks);
                ResetText();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm không thành công!Nhập lại thông tin!");
            }
            ShowKhachSan();
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int indexKhachSan = tblKhachSan.getSelectedRow();
        String data = modelks.getValueAt(indexKhachSan, 0).toString();
        Boolean isOK = true;
        if (indexKhachSan >= 0) {
            if (JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu không??") == 0) {
                String maks = txtMaKS.getText();
                String tenks = txtTenKS.getText();
                Float gia = Float.parseFloat(txtGia.getText());
                if (tenks.length() == 0) {
                    JOptionPane.showMessageDialog(this, "Tên Khách Sạn không được để trống !!!");
                    isOK = false;
                } else if (gia == 0) {
                    JOptionPane.showMessageDialog(this, "Giá Khách Sạn không được để trống !!!");
                    isOK = false;
                }
                if (isOK) {
                    KhachSanDTO ks = new KhachSanDTO();
                    ks.setMaks(maks);
                    ks.setTenks(tenks);
                    ks.setGia(gia);
                    if (new KhachSanBLL().editKhachSan(ks, data)) {
                        JOptionPane.showMessageDialog(this, "Sửa thành công khách sạn");
                        ShowKhachSan();
                        ResetText();
                    } else {
                        JOptionPane.showMessageDialog(this, "Sửa không thành công!!!");
                    }
                }
            }
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblKhachSanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachSanMouseClicked
        int indexKhachSan = tblKhachSan.getSelectedRow();
        if (indexKhachSan == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng để hiển thị");
        } else {
            txtMaKS.setText(modelks.getValueAt(indexKhachSan, 0).toString());
            txtMaKS.setEditable(false);
            txtTenKS.setText(modelks.getValueAt(indexKhachSan, 1).toString());
            txtGia.setText(modelks.getValueAt(indexKhachSan, 2).toString());
        }
    }//GEN-LAST:event_tblKhachSanMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int indexKhachSan = tblKhachSan.getSelectedRow();
        String data = modelks.getValueAt(indexKhachSan, 0).toString();
        if (indexKhachSan >= 0) {
            KhachSanDTO ks = new KhachSanDTO();
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xoá không???") == 0) {
                try {
                    new KhachSanBLL().removeKhachSan(data);
                    JOptionPane.showMessageDialog(this, "Xoá thành công");
                    ShowKhachSan();
                    ResetText();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chọn dòng rồi xoá!!!");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        ResetText();
        txtMaKS.setEditable(true);
    }//GEN-LAST:event_btnLamMoiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblKhachSan;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaKS;
    private javax.swing.JTextField txtTenKS;
    private javax.swing.JTextField txtTimkiem;
    // End of variables declaration//GEN-END:variables
}
